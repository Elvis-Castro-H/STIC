// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Npgsql.EntityFrameworkCore.PostgreSQL.Metadata;
using Quotation.Data.Contexts;

#nullable disable

namespace Quotation.Data.Migrations
{
    [DbContext(typeof(PostgreSqlContext))]
    [Migration("20250611032519_UpdateGearTable")]
    partial class UpdateGearTable
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.16")
                .HasAnnotation("Relational:MaxIdentifierLength", 63);

            NpgsqlModelBuilderExtensions.UseIdentityByDefaultColumns(modelBuilder);

            modelBuilder.Entity("Quotation.Domain.Models.Gear", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("timestamp with time zone");

                    b.Property<int>("GearType")
                        .HasColumnType("integer");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("boolean");

                    b.Property<int>("MaterialId")
                        .HasColumnType("integer");

                    b.Property<double>("Module")
                        .HasColumnType("double precision");

                    b.Property<double>("OuterDiameter")
                        .HasColumnType("double precision");

                    b.Property<double>("PitchDiameter")
                        .HasColumnType("double precision");

                    b.Property<double>("Price")
                        .HasColumnType("double precision");

                    b.Property<int>("TeethCount")
                        .HasColumnType("integer");

                    b.Property<double>("ToothHeight")
                        .HasColumnType("double precision");

                    b.Property<string>("UserId")
                        .HasMaxLength(450)
                        .IsUnicode(false)
                        .HasColumnType("character varying(450)");

                    b.Property<double>("Width")
                        .HasColumnType("double precision");

                    b.HasKey("Id");

                    b.HasIndex("MaterialId");

                    b.ToTable("Gear", (string)null);
                });

            modelBuilder.Entity("Quotation.Domain.Models.Material", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("timestamp with time zone");

                    b.Property<double>("Density")
                        .HasColumnType("double precision");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("boolean");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<double>("PricePerHourMachine")
                        .HasColumnType("double precision");

                    b.Property<double>("PricePerHourOperator")
                        .HasColumnType("double precision");

                    b.Property<double>("PricePerKg")
                        .HasColumnType("double precision");

                    b.HasKey("Id");

                    b.ToTable("Material", (string)null);
                });

            modelBuilder.Entity("Quotation.Domain.Models.Pulley", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("timestamp with time zone");

                    b.Property<int>("GrooveCount")
                        .HasColumnType("integer");

                    b.Property<char>("GrooveType")
                        .HasColumnType("char(1)");

                    b.Property<double>("InnerBoreDiameter")
                        .HasColumnType("double precision");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("boolean");

                    b.Property<int>("MaterialId")
                        .HasColumnType("integer");

                    b.Property<double>("OuterDiameter")
                        .HasColumnType("double precision");

                    b.Property<double>("Price")
                        .HasColumnType("double precision");

                    b.Property<string>("UserId")
                        .HasMaxLength(450)
                        .IsUnicode(false)
                        .HasColumnType("character varying(450)");

                    b.Property<double>("Width")
                        .HasColumnType("double precision");

                    b.HasKey("Id");

                    b.HasIndex("MaterialId");

                    b.ToTable("Pulley", (string)null);
                });

            modelBuilder.Entity("Quotation.Domain.Models.Spacer", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<int>("BoltCount")
                        .HasColumnType("integer");

                    b.Property<double>("BoltPattern")
                        .HasColumnType("double precision");

                    b.Property<double>("CenterBore")
                        .HasColumnType("double precision");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("timestamp with time zone");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("boolean");

                    b.Property<bool>("IsHubCentric")
                        .HasColumnType("boolean");

                    b.Property<int>("MaterialId")
                        .HasColumnType("integer");

                    b.Property<double>("Price")
                        .HasColumnType("double precision");

                    b.Property<double>("ThicknessMm")
                        .HasColumnType("double precision");

                    b.Property<string>("UserId")
                        .HasMaxLength(450)
                        .IsUnicode(false)
                        .HasColumnType("character varying(450)");

                    b.HasKey("Id");

                    b.HasIndex("MaterialId");

                    b.ToTable("Spacers", (string)null);
                });

            modelBuilder.Entity("Quotation.Domain.Models.Gear", b =>
                {
                    b.HasOne("Quotation.Domain.Models.Material", "Material")
                        .WithMany()
                        .HasForeignKey("MaterialId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("Material");
                });

            modelBuilder.Entity("Quotation.Domain.Models.Pulley", b =>
                {
                    b.HasOne("Quotation.Domain.Models.Material", "Material")
                        .WithMany()
                        .HasForeignKey("MaterialId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("Material");
                });

            modelBuilder.Entity("Quotation.Domain.Models.Spacer", b =>
                {
                    b.HasOne("Quotation.Domain.Models.Material", "Material")
                        .WithMany()
                        .HasForeignKey("MaterialId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("Material");
                });
#pragma warning restore 612, 618
        }
    }
}
